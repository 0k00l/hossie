From 79749791d6faecaae050caff7d3b832ce98b1bee Mon Sep 17 00:00:00 2001
From: Dawid Kurek <dkurek@displaylink.com>
Date: Mon, 8 Aug 2016 07:51:17 +0200
Subject: [PATCH] Fix compilation with kernel 4.7

---
 .travis.yml           |  1 +
 module/evdi_cursor.c  | 11 ++++++-----
 module/evdi_drv.h     |  2 +-
 module/evdi_fb.c      | 10 +++++-----
 module/evdi_gem.c     | 12 +++++++-----
 module/evdi_main.c    | 12 +++++++-----
 module/evdi_modeset.c | 14 ++++++++++++--
 7 files changed, 39 insertions(+), 23 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index f353e17..0960905 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -14,6 +14,7 @@ env:
   - KVER=4.4
   - KVER=4.5
   - KVER=4.6
+    KVER=4.7
   - KVER=master
 
 matrix:
diff --git a/module/evdi_cursor.c b/module/evdi_cursor.c
index 543cb3d..398c785 100755
--- a/module/evdi_cursor.c
+++ b/module/evdi_cursor.c
@@ -92,11 +92,12 @@ int evdi_cursor_set(__maybe_unused struct drm_crtc *crtc, struct drm_file *file,
 					EVDI_CURSOR_W, EVDI_CURSOR_H);
 			return -EINVAL;
 		}
-		#if KERNEL_VERSION(4, 6, 0) >= LINUX_VERSION_CODE
-			obj = drm_gem_object_lookup(crtc->dev, file, handle);
-		#else
-			obj = drm_gem_object_lookup(file, handle);
-		#endif
+
+#if KERNEL_VERSION(4, 7, 0) > LINUX_VERSION_CODE
+		obj = drm_gem_object_lookup(crtc->dev, file, handle);
+#else
+		obj = drm_gem_object_lookup(file, handle);
+#endif
 
 		if (!obj) {
 			DRM_ERROR("failed to lookup gem object.\n");
diff --git a/module/evdi_drv.h b/module/evdi_drv.h
index 8b5086c..6a06ca5 100755
--- a/module/evdi_drv.h
+++ b/module/evdi_drv.h
@@ -20,7 +20,7 @@
 #include <drm/drm_crtc_helper.h>
 #include <drm/drm_rect.h>
 #if KERNEL_VERSION(3, 18, 0) <= LINUX_VERSION_CODE
-#include <drm/drm_gem.h>
+# include <drm/drm_gem.h>
 #endif
 #include "evdi_debug.h"
 
diff --git a/module/evdi_fb.c b/module/evdi_fb.c
index cd0ac4f..8d3ac5a 100755
--- a/module/evdi_fb.c
+++ b/module/evdi_fb.c
@@ -500,11 +500,11 @@ struct drm_framebuffer *evdi_fb_user_fb_create(
 		return ERR_PTR(-EINVAL);
 	}
 
-	#if KERNEL_VERSION(4, 6, 0) >= LINUX_VERSION_CODE
-		obj = drm_gem_object_lookup(dev, file, mode_cmd->handles[0]);
-	#else
-		obj = drm_gem_object_lookup(file, mode_cmd->handles[0]);
-	#endif
+#if KERNEL_VERSION(4, 7, 0) > LINUX_VERSION_CODE
+	obj = drm_gem_object_lookup(dev, file, mode_cmd->handles[0]);
+#else
+	obj = drm_gem_object_lookup(file, mode_cmd->handles[0]);
+#endif
 	if (obj == NULL)
 		return ERR_PTR(-ENOENT);
 
diff --git a/module/evdi_gem.c b/module/evdi_gem.c
index e8c11a8..1f4d0e3 100755
--- a/module/evdi_gem.c
+++ b/module/evdi_gem.c
@@ -208,11 +208,13 @@ int evdi_gem_mmap(struct drm_file *file,
 	int ret = 0;
 
 	mutex_lock(&dev->struct_mutex);
-	#if KERNEL_VERSION(4, 6, 0) >= LINUX_VERSION_CODE
-		obj = drm_gem_object_lookup(dev, file, handle);
-	#else
-		obj = drm_gem_object_lookup(file, handle);
-	#endif
+
+#if KERNEL_VERSION(4, 7, 0) > LINUX_VERSION_CODE
+	obj = drm_gem_object_lookup(dev, file, handle);
+#else
+	obj = drm_gem_object_lookup(file, handle);
+#endif
+
 	if (obj == NULL) {
 		ret = -ENOENT;
 		goto unlock;
diff --git a/module/evdi_main.c b/module/evdi_main.c
index a4ee986..7f7628c 100755
--- a/module/evdi_main.c
+++ b/module/evdi_main.c
@@ -79,11 +79,13 @@ int evdi_driver_unload(struct drm_device *dev)
 
 	drm_vblank_cleanup(dev);
 	drm_kms_helper_poll_fini(dev);
-	#if KERNEL_VERSION(4, 6, 0) >= LINUX_VERSION_CODE
-		drm_connector_unplug_all(dev);
-	#else
-		drm_connector_unregister_all(dev);
-	#endif
+
+#if KERNEL_VERSION(4, 7, 0) > LINUX_VERSION_CODE
+	drm_connector_unplug_all(dev);
+#else
+	drm_connector_unregister_all(dev);
+#endif
+
 	evdi_fbdev_unplug(dev);
 	if (evdi->cursor)
 		evdi_cursor_free(evdi->cursor);
diff --git a/module/evdi_modeset.c b/module/evdi_modeset.c
index 3097710..b10d353 100755
--- a/module/evdi_modeset.c
+++ b/module/evdi_modeset.c
@@ -16,7 +16,7 @@
 #include <drm/drm_crtc.h>
 #include <drm/drm_crtc_helper.h>
 #if KERNEL_VERSION(3, 17, 0) <= LINUX_VERSION_CODE
-#include <drm/drm_plane_helper.h>
+# include <drm/drm_plane_helper.h>
 #endif
 #include "evdi_drm.h"
 #include "evdi_drv.h"
@@ -152,7 +152,11 @@ static void evdi_sched_page_flip(struct work_struct *work)
 		unsigned long flags = 0;
 
 		spin_lock_irqsave(&dev->event_lock, flags);
+#if KERNEL_VERSION(4, 8, 0) > LINUX_VERSION_CODE
 		drm_send_vblank_event(dev, 0, event);
+#else
+		drm_crtc_send_vblank_event(crtc, event);
+#endif
 		spin_unlock_irqrestore(&dev->event_lock, flags);
 	}
 }
@@ -194,7 +198,11 @@ static int evdi_crtc_page_flip(struct drm_crtc *crtc,
 			unsigned long flags = 0;
 
 			spin_lock_irqsave(&dev->event_lock, flags);
+#if KERNEL_VERSION(4, 8, 0) > LINUX_VERSION_CODE
 			drm_send_vblank_event(dev, 0, flip_queue->event);
+#else
+			drm_crtc_send_vblank_event(crtc, flip_queue->event);
+#endif
 			spin_unlock_irqrestore(&dev->event_lock, flags);
 		}
 		flip_queue->event = event;
@@ -366,7 +374,9 @@ int evdi_modeset_init(struct drm_device *dev)
 
 	drm_mode_create_dirty_info_property(dev);
 
-#if KERNEL_VERSION(4, 5, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(4, 8, 0) <= LINUX_VERSION_CODE
+
+#elif KERNEL_VERSION(4, 5, 0) <= LINUX_VERSION_CODE
 	drm_dev_set_unique(dev, dev_name(dev->dev));
 #elif KERNEL_VERSION(3, 16, 0) <= LINUX_VERSION_CODE
 	drm_dev_set_unique(dev, "%s", dev_name(dev->dev));
